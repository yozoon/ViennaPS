name: Linux

on:
  push:
    branches: [actions]
  workflow_dispatch:

env:
  BUILD_TYPE: Debug
  CACHE_TAG: 0

jobs:
  build-examples:
    runs-on: ubuntu-latest
    steps:
      #
      # ViennaLS setup
      #
      - name: Checkout ViennaLS
        uses: actions/checkout@v3
        with:
          repository: ViennaTools/ViennaLS
          path: ./viennals

      - name: Setup Cache for Build Dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          key: viennals-dependencies-cache-${{ runner.os }}-${{env.BUILD_TYPE}}-${{ hashFiles(format('{0}/external/upstream/**CMakeLists.txt', ${{github.workspace}}/viennals )) }}-${{env.CACHE_TAG}}
          path: ${{github.workspace}}/viennals/dependencies/Build

      - name: Configure ViennaLS
        if: ${{ steps.cache-dependencies.outputs.cache-hit != 'true' }}
        working-directory: ./viennals
        run: |
          cmake -B ./build \
            -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
            -DCMAKE_INSTALL_PREFIX=./install

      - name: Configure ViennaLS (cached dependencies)
        if: ${{ steps.cache-dependencies.outputs.cache-hit == 'true' }}
        working-directory: ./viennals
        run: |
          cmake -B ./build \
            -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
            -DVTK_DIR=./dependencies/Build/vtk_external/ \
            -DViennaHRLE_DIR=./dependencies/Install/viennahrle_external/lib/cmake/ViennaHRLE/ \
            -DCMAKE_INSTALL_PREFIX=./install

      - name: Build ViennaLS
        working-directory: ./viennals
        run: cmake --build ./build --target buildDependencies all

      - name: Install ViennaLS
        working-directory: ./viennals
        run: cmake --install ./build

      #
      # ViennaRay setup
      #
      - name: Clone ViennaRay
        uses: actions/checkout@v3
        with:
          repository: ViennaTools/ViennaRay
          path: ./viennaray

      - name: Setup Cache for Build Dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          key: viennaray-dependencies-cache-${{ runner.os }}-${{env.BUILD_TYPE}}-${{ hashFiles( format('{0}/external/upstream/**CMakeLists.txt', ${{github.workspace}}/viennaray )) }}-${{env.CACHE_TAG}}
          path: ${{github.workspace}}/viennaray/embree

      - name: Download and Unpack embree
        if: ${{ steps.cache-dependencies.outputs.cache-hit != 'true' }}
        working-directory: ./viennaray
        run: |
          curl -L -O https://github.com/embree/embree/releases/download/v3.13.0/embree-3.13.0.x86_64.linux.tar.gz \
            && tar -xf embree-3.13.0.x86_64.linux.tar.gz \
            && mv embree-3.13.0.x86_64.linux embree

      - name: Configure ViennaRay
        working-directory: ./viennaray
        run: |
          cmake -B ./build \
            -D CMAKE_BUILD_TYPE=${{env.build_type}} \
            -D embree_DIR=./embree/lib/cmake/embree-3.13.0/ \
            -D CMAKE_INSTALL_PREFIX=./install

      - name: Build ViennaRay
        working-directory: ./viennaray
        run: cmake --build ./build --target buildDependencies all

      - name: Install ViennaRay
        working-directory: ./viennaray
        run: cmake --install ./build


      #
      # Build Examples
      #
      - name: Clone ViennaPS
        uses: actions/checkout@v3
        with:
          path: ./viennaps

      - name: print folders
        working-directory: ./viennaps
        run: |
          tree -d ./viennals
          tree -d ./viennaray

      - name: Configure CMake
        working-directory: ./viennaps
        run: |
          cmake -B ./build \
            -D ViennaLS_DIR=./viennals/install/lib/cmake/ViennaLS/ \
            -D ViennaRay_DIR=./viennaray/install/lib/cmake/ViennaRay/ \
            -D VIENNAPS_BUILD_EXAMPLES=ON

      - name: Build Dependencies
        working-directory: ./viennaps
        run: cmake --build ./build --target buildDependencies buildExamples

      - name: Run
        working-directory: ./viennaps/build/Examples/InterpolationDemo
        run: ./InterpolationDemo
