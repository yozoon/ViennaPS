name: macOS

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  repository_dispatch:
    types:
      - viennals-update-macos
      - viennaray-update-macos
  # Run this workflow every Sunday at 18:30 to refresh caches
  schedule:
    - cron: "30 18 * * 0"
  workflow_dispatch:

env:
  BUILD_TYPE: Debug
  CACHE_TAG: 0

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup-viennals:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./viennals
    steps:
      - name: Checkout ViennaLS
        uses: actions/checkout@v3
        with:
          repository: yozoon/ViennaLS
          path: ./viennals

      - name: Clear Cache
        if: ${{ github.event_name == 'schedule' }}
        run: |
          curl \
            -X DELETE \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT_CACHE }}" \
            https://api.github.com/repos/yozoon/viennaps/actions/caches?key=viennals-dependencies-cache-${{ runner.os }}-${{env.BUILD_TYPE}}-${{ hashFiles( './viennals/external/upstream/**CMakeLists.txt' ) }}-${{env.CACHE_TAG}} \
          && sleep 10

      - name: Setup Cache for Build Dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          key: viennals-dependencies-cache-${{ runner.os }}-${{env.BUILD_TYPE}}-${{ hashFiles( './viennals/external/upstream/**CMakeLists.txt' ) }}-${{env.CACHE_TAG}}
          path: |
            ${{github.workspace}}/viennals/dependencies/Build
            ${{github.workspace}}/viennals/dependencies/Install

      - name: Configure ViennaLS
        if: ${{ steps.cache-dependencies.outputs.cache-hit != 'true' }}
        run: |
          cmake -B ./build \
            -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
            -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/viennals/install

      - name: Configure ViennaLS (cached dependencies)
        if: ${{ steps.cache-dependencies.outputs.cache-hit == 'true' }}
        shell: bash
        run: |
          cmake -B ./build \
            -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
            -D VTK_DIR=${{github.workspace}}/viennals/dependencies/Build/vtk_external/lib/cmake/vtk-9.1/ \
            -D ViennaHRLE_DIR=${{github.workspace}}/viennals/dependencies/Install/viennahrle_external/lib/cmake/ViennaHRLE/ \
            -D OpenMP_C_FLAGS="-Xpreprocessor -fopenmp -I$(brew --prefix libomp)/include" \
            -D OpenMP_CXX_FLAGS="-Xpreprocessor -fopenmp -I$(brew --prefix libomp)/include" \
            -D OpenMP_C_LIB_NAMES="omp" \
            -D OpenMP_CXX_LIB_NAMES="omp" \
            -D OpenMP_omp_LIBRARY="$(brew --prefix libomp)/lib/libomp.a" \
            -D CMAKE_INSTALL_PREFIX=${{github.workspace}}/viennals/install

      - name: Build ViennaLS
        run: cmake --build ./build --target buildDependencies all

      - name: Install ViennaLS
        run: cmake --install ./build

      - name: Compress Installation
        run: tar -cpzf ${{github.workspace}}/viennals.tar.gz ./install ./dependencies/Install/ ./dependencies/Build/

      - name: Save Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: viennals-${{runner.os}}-${{env.BUILD_TYPE}}
          path: ${{github.workspace}}/viennals.tar.gz

  setup-viennaray:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./viennaray
    steps:
      - name: Checkout ViennaRay
        uses: actions/checkout@v3
        with:
          repository: ViennaTools/ViennaRay
          path: ./viennaray

      - name: Clear Cache
        if: ${{ github.event_name == 'schedule' }}
        run: |
          curl \
            -X DELETE \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT_CACHE }}" \
            https://api.github.com/repos/yozoon/viennaps/actions/caches?key=viennaray-dependencies-cache-${{ runner.os }}-${{env.BUILD_TYPE}}-${{ hashFiles( './viennaray/external/upstream/**CMakeLists.txt' ) }}-${{env.CACHE_TAG}} \
          && sleep 10

      - name: Setup Cache for Build Dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          key: viennaray-dependencies-cache-${{ runner.os }}-${{env.BUILD_TYPE}}-${{ hashFiles( './viennaray/external/upstream/**CMakeLists.txt' ) }}-${{env.CACHE_TAG}}
          path: ${{github.workspace}}/viennaray/embree

      - name: Download and Unpack embree
        if: ${{ steps.cache-dependencies.outputs.cache-hit != 'true' }}
        run: |
          curl -L -O https://github.com/embree/embree/releases/download/v3.13.0/embree-3.13.0.x86_64.linux.tar.gz \
            && tar -xf embree-3.13.0.x86_64.linux.tar.gz \
            && mv embree-3.13.0.x86_64.linux embree

      - name: Configure ViennaRay
        run: |
          cmake -B ./build \
            -D CMAKE_BUILD_TYPE=${{env.build_type}} \
            -D embree_DIR=${{github.workspace}}/viennaray/embree/lib/cmake/embree-3.13.0 \
            -D OpenMP_C_FLAGS="-Xpreprocessor -fopenmp -I$(brew --prefix libomp)/include" \
            -D OpenMP_CXX_FLAGS="-Xpreprocessor -fopenmp -I$(brew --prefix libomp)/include" \
            -D OpenMP_C_LIB_NAMES="omp" \
            -D OpenMP_CXX_LIB_NAMES="omp" \
            -D OpenMP_omp_LIBRARY="$(brew --prefix libomp)/lib/libomp.a" \
            -D CMAKE_INSTALL_PREFIX=${{github.workspace}}/viennaray/install

      - name: Build ViennaRay
        run: cmake --build ./build --target buildDependencies all

      - name: Install ViennaRay
        run: cmake --install ./build

      - name: Compress Installation
        run: tar -cpzf ${{github.workspace}}/viennaray.tar.gz ./install ./embree

      - name: Save Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: viennaray-${{runner.os}}-${{env.BUILD_TYPE}}
          path: ${{github.workspace}}/viennaray.tar.gz

  build-examples:
    runs-on: macos-latest
    needs: [setup-viennals, setup-viennaray]
    if: ${{ github.event_name != 'schedule' }}

    steps:
      - name: Checkout ViennaPS
        uses: actions/checkout@v3

      - name: Download ViennaLS Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: viennals-${{runner.os}}-${{env.BUILD_TYPE}}

      - name: Download ViennaRay Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: viennaray-${{runner.os}}-${{env.BUILD_TYPE}}

      - name: Decompress Build Artifacts
        run: |
          mkdir -p viennals \
          && mkdir -p viennaray \
          && tar -xzf viennals.tar.gz -C ${{github.workspace}}/viennals \
          && tar -xzf viennaray.tar.gz -C ${{github.workspace}}/viennaray

      - name: Configure CMake
        run: |
          cmake -B ./build \
            -D ViennaLS_DIR=${{github.workspace}}/viennals/install/lib/cmake/ViennaLS/ \
            -D ViennaRay_DIR=${{github.workspace}}/viennaray/install/lib/cmake/ViennaRay/ \
            -D OpenMP_C_FLAGS="-Xpreprocessor -fopenmp -I$(brew --prefix libomp)/include" \
            -D OpenMP_CXX_FLAGS="-Xpreprocessor -fopenmp -I$(brew --prefix libomp)/include" \
            -D OpenMP_C_LIB_NAMES="omp" \
            -D OpenMP_CXX_LIB_NAMES="omp" \
            -D OpenMP_omp_LIBRARY="$(brew --prefix libomp)/lib/libomp.a" \
            -D VIENNAPS_BUILD_EXAMPLES=ON

      - name: Build Examples
        run: cmake --build ./build --target buildExamples

      - name: Run
        working-directory: ${{github.workspace}}/build/Examples/InterpolationDemo
        run: ./InterpolationDemo
