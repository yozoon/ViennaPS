name: Build Dependencies on Windows

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  repository_dispatch:
    types:
      - viennals-update-windows
      - viennaray-update-windows
  # Run this workflow every Sunday at 18:30 to refresh caches
  schedule:
    - cron: "30 18 * * 0"
  workflow_dispatch:

env:
  BUILD_TYPE: Debug
  CACHE_TAG: 0

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup-viennals:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./viennals
    steps:
      - name: Checkout ViennaLS
        uses: actions/checkout@v3
        with:
          repository: yozoon/ViennaLS
          path: ./viennals

      - name: Clear Cache
        if: ${{ github.event_name == 'schedule' }}
        run: |
          curl -X DELETE -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.PAT_CACHE }}" https://api.github.com/repos/yozoon/viennaps/actions/caches?key=viennals-dependencies-cache-${{ runner.os }}-${{env.BUILD_TYPE}}-${{ hashFiles( './viennals/external/upstream/**CMakeLists.txt' ) }}-${{env.CACHE_TAG}}

      - name: Setup Cache for Build Dependencies
        uses: actions/cache@v3
        id: viennals-dependency-cache
        with:
          key: viennals-dependency-cache-${{ runner.os }}-${{env.BUILD_TYPE}}-${{ hashFiles( './viennals/external/upstream/**CMakeLists.txt' ) }}-${{env.CACHE_TAG}}
          path: |
            ${{github.workspace}}/viennals/dependencies/Source
            ${{github.workspace}}/viennals/dependencies/Build
            ${{github.workspace}}/viennals/dependencies/Install

      - name: Configure ViennaLS
        run: cmake -B ${{github.workspace}}/viennals/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/viennals/install

      - name: Add VTK to PATH
        run: echo "${{github.workspace}}\viennals\dependencies\Build\vtk_external\bin\${{env.BUILD_TYPE}}" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build ViennaLS
        run: cmake --build ${{github.workspace}}/viennals/build

  setup-viennaray:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./viennaray
    steps:
      - name: Checkout ViennaRay
        uses: actions/checkout@v3
        with:
          repository: ViennaTools/ViennaRay
          path: ./viennaray

      - name: Clear Cache
        if: ${{ github.event_name == 'schedule' }}
        run: |
          curl -X DELETE -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.PAT_CACHE }}" https://api.github.com/repos/yozoon/viennaps/actions/caches?key=viennaray-dependencies-cache-${{ runner.os }}-${{env.BUILD_TYPE}}-${{ hashFiles( './viennaray/external/upstream/**CMakeLists.txt' ) }}-${{env.CACHE_TAG}}

      - name: Setup Cache for Build Dependencies
        uses: actions/cache@v3
        id: viennaray-dependency-cache
        with:
          key: viennaray-dependency-cache-${{ runner.os }}-${{env.BUILD_TYPE}}-${{ hashFiles( './viennaray/external/upstream/**CMakeLists.txt' ) }}-${{env.CACHE_TAG}}
          path: ${{github.workspace}}/viennaray/embree

      - name: Download and Unpack embree
        if: ${{ steps.viennaray-dependency-cache.outputs.cache-hit != 'true' }}
        run: curl -L -O "https://github.com/embree/embree/releases/download/v3.13.0/embree-3.13.0.x64.vc14.windows.zip"; tar -xf "${{github.workspace}}\viennaray\embree-3.13.0.x64.vc14.windows.zip"; mv "${{github.workspace}}\viennaray\embree-3.13.0.x64.vc14.windows" "${{github.workspace}}\viennaray\embree\"

      - name: Add embree to path
        run: echo "${{github.workspace}}\embree\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Configure ViennaRay
        run: |
          cmake -B ${{github.workspace}}/viennaray/build -DCMAKE_BUILD_TYPE=${{env.build_type}} -Dembree_DIR=${{github.workspace}}/viennaray/embree/lib/cmake/embree-3.13.0 -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/viennaray/install

      - name: Build ViennaRay
        run: cmake --build ${{github.workspace}}/viennaray/build --config ${{env.BUILD_TYPE}}
